clear
clc

%FIND PEAKS ARDUINO FUNCTION
arr = [0.05,0.10,0.17,0.20,0.27,0.31,0.37,0.41,0.48,0.53,0.59,0.71,0.90,1.23,1.66,2.34,3.28,4.47,5.93,7.51,8.60,9.62,10.79,11.91,13.02,14.35,15.34,16.17,16.74,16.78,16.66,15.98,14.81,13.33,11.68,10.65,9.63,8.47,7.29,6.20,4.90,3.82,2.87,2.04,1.63,1.09,0.83,0.80,0.86,0.92,0.87,0.86,0.87,0.93,0.88,0.82,0.85,0.85,0.85,0.80,0.76,0.75,0.78,0.74,0.68,0.67,0.65,0.65,0.63,0.63,0.63,0.65,0.60,0.61,0.60,0.62,0.62,0.57,0.55,0.56,0.57,0.55,0.55,0.54,0.57,0.58,0.53,0.53,0.48,0.52,0.51,0.49,0.51,0.51,0.51,0.52,0.53,0.51,0.50,0.47,0.48,0.48,0.49,0.50,0.49,0.48,0.49,0.49,0.49,0.50,0.49,0.50,0.50,0.49,0.49,0.48,0.49,0.50,0.51,0.51,0.52,0.50,0.49,0.50,0.50,0.50,0.50,0.50,0.51,0.51,0.50,0.49,0.48,0.47,0.46,0.47,0.49,0.49,0.48,0.48,0.47,0.48,0.48,0.49,0.49,0.50,0.49,0.49,0.49,0.50,0.50,0.48,0.48,0.48,0.47,0.48,0.47,0.46,0.46,0.45,0.45,0.46,0.46,0.45,0.45,0.45,0.46,0.46,0.47,0.47,0.47,0.48,0.47,0.46,0.47,0.46,0.46,0.47,0.47,0.47,0.46,0.46,0.45,0.45,0.45,0.45,0.45,0.46,0.45,0.45,0.46,0.46,0.45,0.46,0.47,0.47,0.46,0.48,0.47,0.46];
%y_pos = [0.69	0.75	0.69	0.75	0.81	0.75	0.62	0.62	0.62	0.69	0.62	0.37	-0.13	-0.94	-2.81	-8.31	-10.13	0.25	16.5	29.31	39.69	50.12	55.94	61.81	66.31	70.12	71.56	72.69	72.94	73	72.87	72.62	72.06	71.69	70.56	67.06	60.12	50.87	40.12	27.81	11.37	0.25	-7.75	-5.31	0.87	7.06	8.25	8.06	7.75	6.75	6.12	5.62	5.19	5	5.19	5.56	5.69	5.5	5.31	5.25	5.44	5.56	5.62	5.69	5.69	5.56	5.56	5.56	5.56	5.5	5.31	5.25	5.37	5.5	5.87	5.87	5.81	5.62	5.62	5.62	5.69	5.87	5.75	5.75	5.69	5.62	5.56	5.56	5.62	5.62	5.62	5.56	5.56	5.56	5.62	5.56	5.69	5.69	5.56	5.56	5.5	5.5	5.56	5.56	5.44	5.44	5.44	5.37	5.37	5.44	5.44	5.44	5.5	5.5	5.44	5.37	5.31	5.31	5.31	5.25	5.25	5.25	5.25	5.19	5.19	5.25	5.25	5.19	5.19	5.19	5.12	5.12	5.19	5.19	5.19	5.19	5.12	5.06	5.06	5	5	4.94	4.94	4.87	4.87	4.81	4.81	4.81	4.75	4.69	4.75	4.69	4.69	4.69	4.69	4.62	4.62	4.62	4.56	4.62	4.56	4.56	4.5	4.44	4.44	4.37	4.37	4.37	4.37	4.37	4.37	4.31	4.37	4.37	4.37	4.37	4.37	4.31	4.31	4.37	4.31	4.31	4.31	4.31	4.25	4.25	4.25	4.19	4.19	4.19	4.19	4.19	4.19	4.12	4.12	4.19	4.12	4.12	4.06	4.06];



Peak = max(arr);
PeakIndex = find(arr == Peak);

up = PeakIndex;
down = PeakIndex;

ad = arr(down);
au = arr(up);

dataCount = 0;

while (ad > -10)
    if (abs((arr(down) - arr(down + 1))) < 0.1)
        if (dataCount == 5)
            trough1 = arr(down+3);
            indices1 = down+3;
            L_indice = down+3;
            disp("Left: ");
            disp(trough1);
            disp(indices1);
            dataCount = 0;
            break;
            
        else
            dataCount = dataCount + 1;
        end
    end
    down = down - 1;
    ad = arr(down);
end


while (au > -10)
    if (abs((arr(up) - arr(up-1))) < 0.1)
        if (dataCount == 5)
        trough2 = arr(up-3);
        indices2 = up-3;
        R_indice = up-3;
        disp("Right: ");
        disp(trough2);
        disp(indices2);
        break;
        else
            dataCount = dataCount + 1;
        end
    end
    
    up = up + 1;
    au = arr(up);
end

%MAIN ARDUINO CODE

  
extRows = abs(indices2 - indices1 + 1);
range = indices2 - indices1;
j = 1;

for i = 1:extRows
    
    acc_ext(j) = arr(indices1);
    %y_pos_ext(j) = y_pos(indices1);
    indices1 = indices1+1;
    j = j + 1;
end

for i = 1:extRows-1 %jerk
    ders(i) = (acc_ext(i+1) - acc_ext(i))/0.04; %time intervals are 0.04 sec
end

%FIND CATCH ARDUINO FUNCTION
  %find max acceleration
  accel_max = max(acc_ext);
  accel_ind = find(acc_ext == accel_max);
  
  catchFlag = false;
  
  PeakExt = max(acc_ext);
  PeakIndExt = find(acc_ext == PeakExt)-1;
  for i = 2:extRows-1
    %if before peak and 
    if ((i < PeakIndExt) && ((ders(i-1)>0)&&(ders(i)<0)&&(ders(i+1)>0)))
      %flexors
 
    
        dv_Index = find(arr == acc_ext(i));
        
        %Catch = ((dv_Index - indices[0]) / range) * 100;
        a = dv_Index  - L_indice;
        b = a / range;
        Catch = abs(b * 100);

        catchFlag = true;

        CatchArray = sprintf("flex%.2f,", Catch);
        disp(CatchArray);
     
    end
    
    %else if after peak and values are increasing
    if ((i > PeakIndExt)&&((ders(i-1)<0)&&(ders(i)>0)&&(ders(i+1)<0)))
        %extensors
     
            dv_Index = find(arr == acc_ext(i));
            
            %Catch = ((dv_Index - indices[0]) / range) * 100;
            a = dv_Index  - L_indice;
            b = a / range;
            Catch =abs( b * 100);
            
            catchFlag = true;
            
            CatchArray = sprintf("ext%.2f,", Catch);
            disp(CatchArray);
        
    end
  end
  if (catchFlag == true)
    disp("The catch percentage for this trial is: ");
    disp(Catch);
    disp("%");

  else
    disp("No catch detected for this trial ");
  end


  %=========================
  % sprintf(CatchArray, "%.2f,%.2f,%.2f", catch1, catch2, catch3) ;
  

%%
%     max_derivative = 0;
%     min_derivative = 0;
%     numValues = R_indice - L_indice;
%     thresh = 10;
%    
%     
%     for i = 1:numValues-1
%     derivative = (acc_ext(i+1) - acc_ext(i))/0.04; %time intervals are 0.04 sec
%     ders(i) = derivative;
%     end
%     
%     
%     
%     accel_max = max(acc_ext);
%     accel_ind = find(arr == accel_max);
%     
%     
%     for i = 2: numValues-1
%         if (((ders(i-1)<0)&&(ders(i)>0)&&(ders(i+1)<0)) || ((ders(i-1)>0)&&(ders(i)<0)&&(ders(i+1)>0)))
%           
%             if(abs(ders(i)) > thresh)    
%                 %abrupt change detect, therefor catch
%                 
%                 %find the index
%                 dv = (acc_ext(i+1) - acc_ext(i))/0.04;
%                 dv_Index = find(arr == acc_ext(i));
% 
%                 Catch = ((dv_Index - L_indice) / numValues) * 100;
%                 disp("Abrupt change detected at index " + Catch + "%");
%                 
%                 
%             end
%         end
%     end
    

%     indices = (35, 96];    
%     filtNet = (0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.09,0.10,0.11,0.12,0.13,0.14,0.15,0.16,0.17,0.17,0.17,0.17,0.17,0.17,0.17,0.16,0.16,0.17,0.20,0.20,0.22,0.25,0.25,0.28,0.29,0.44,0.70,0.78,0.82,1.30,1.57,2.29,3.14,4.07,5.52,6.43,6.98,7.49,8.17,8.99,9.69,10.24,10.95,11.60,11.92,11.91,12.01,12.28,11.84,11.13,10.85,11.01,11.22,11.23,11.10,10.99,10.91,10.77,10.89,10.91,11.47,11.52,11.09,11.43,11.33,11.39,11.31,11.13,10.96,10.74,10.34,9.87,9.40,8.75,8.02,7.33,6.60,6.00,5.22,4.66,4.04,3.41,2.92,2.38,1.98,1.65,1.39,1.21,1.04,0.96,0.83,0.69,0.61,0.50,0.42,0.34,0.31,0.25,0.23,0.17,0.14,0.15,0.15,0.15,0.15,0.15,0.14,0.15,0.15,0.15,0.15,0.15,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.15,0.16,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.14,0.15,0.15,0.15,0.15,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16,0.16];
%     thresh = 2;
%     extRows = abs(indices(1,2) - indices(1,1) + 1);
%     j = 1;
%     
%     for i = indices(1,1):indices(1,2)
% 
%       acc_ext(j) = filtNet(i);
%       j = j + 1;
%     end
%     
%   range = indices(1,2)-indices(1,1);
% 
%   for i = 1:extRows-1
%     ders(i) = (acc_ext(i + 1) - acc_ext(i)) / 0.04; %time intervals are 0.04 sec
%     disp(ders(i));
%   end
%   
%    for i = 2: length(ders)-1
%         if (((ders(i-1)<0)&&(ders(i)>0)&&(ders(i+1)<0)) || ((ders(i-1)>0)&&(ders(i)<0)&&(ders(i+1)>0)))
%           
%             if(abs(ders(i)) > thresh)    
%                 %abrupt change detect, therefor catch
%                 
%                 %find the index
%                 %dv = (acc_ext(i+1) - acc_ext(i))/0.04;
%                 dv_Index = find(filtNet == acc_ext(i));
% 
%                 Catch = ((dv_Index - indices(1,1)) / range) * 100;
%                 disp("Abrupt change detected at index " + Catch + "%");
%                 
%                 
%             end
%         end
%     end

%%
filtNet = [0.04,0.10,0.14,0.19,0.26,0.32,0.38,0.43,0.50,0.57,0.64,0.68,0.69,0.72,0.75,0.78,0.90,1.14,1.65,2.36,3.51,4.83,6.07,6.86,7.98,8.88,10.09,11.13,12.09,13.14,14.21,15.08,15.91,16.37,16.71,16.49,16.08,15.65,15.79,15.75,15.72,15.41,15.20,14.80,13.97,13.04,12.21,11.28,10.41,9.41,8.54,7.58,6.80,5.90,4.86,4.04,3.25,2.47,1.93,1.74,1.64,1.53,1.45,1.41,1.39,1.36,1.44,1.47,1.50,1.48,1.46,1.40,1.44,1.49,1.56,1.55,1.54,1.54,1.55,1.52,1.52,1.54,1.54,1.52,1.53,1.53,1.52,1.51,1.51,1.46,1.48,1.48,1.47,1.45,1.45,1.44,1.44,1.45,1.44,1.44,1.44,1.44,1.46,1.46,1.45,1.42,1.41,1.43,1.44,1.44,1.46,1.44,1.44,1.44,1.43,1.43,1.44,1.43,1.41,1.43,1.43,1.43,1.42,1.42,1.42,1.42,1.42,1.41,1.40,1.40,1.40,1.39,1.39,1.39,1.39,1.39,1.39,1.39,1.39,1.38,1.37,1.36,1.36,1.37,1.37,1.36,1.36,1.36,1.35,1.34,1.33,1.33,1.33,1.32,1.32,1.32,1.32,1.30,1.30,1.30,1.30,1.30,1.29,1.29,1.30,1.30,1.30,1.29,1.28,1.28,1.28,1.28,1.29,1.28,1.28,1.27,1.27,1.27,1.27,1.27,1.26,1.26,1.26,1.26,1.25,1.26,1.26,1.25,1.25,1.25,1.25,1.26,1.26,1.27,1.26,1.26,1.27,1.26,1.26,1.26];
y_pos = [0.69	0.75	0.69	0.75	0.81	0.75	0.62	0.62	0.62	0.69	0.62	0.37	-0.13	-0.94	-2.81	-8.31	-10.13	0.25	16.5	29.31	39.69	50.12	55.94	61.81	66.31	70.12	71.56	72.69	72.94	73	72.87	72.62	72.06	71.69	70.56	67.06	60.12	50.87	40.12	27.81	11.37	0.25	-7.75	-5.31	0.87	7.06	8.25	8.06	7.75	6.75	6.12	5.62	5.19	5	5.19	5.56	5.69	5.5	5.31	5.25	5.44	5.56	5.62	5.69	5.69	5.56	5.56	5.56	5.56	5.5	5.31	5.25	5.37	5.5	5.87	5.87	5.81	5.62	5.62	5.62	5.69	5.87	5.75	5.75	5.69	5.62	5.56	5.56	5.62	5.62	5.62	5.56	5.56	5.56	5.62	5.56	5.69	5.69	5.56	5.56	5.5	5.5	5.56	5.56	5.44	5.44	5.44	5.37	5.37	5.44	5.44	5.44	5.5	5.5	5.44	5.37	5.31	5.31	5.31	5.25	5.25	5.25	5.25	5.19	5.19	5.25	5.25	5.19	5.19	5.19	5.12	5.12	5.19	5.19	5.19	5.19	5.12	5.06	5.06	5	5	4.94	4.94	4.87	4.87	4.81	4.81	4.81	4.75	4.69	4.75	4.69	4.69	4.69	4.69	4.62	4.62	4.62	4.56	4.62	4.56	4.56	4.5	4.44	4.44	4.37	4.37	4.37	4.37	4.37	4.37	4.31	4.37	4.37	4.37	4.37	4.37	4.31	4.31	4.37	4.31	4.31	4.31	4.31	4.25	4.25	4.25	4.19	4.19	4.19	4.19	4.19	4.19	4.12	4.12	4.19	4.12	4.12	4.06	4.06];

    indices1 = 19;
    indices2 = 33;
    extRows = abs(indices2 - indices1 + 1);
    range = indices2 - indices1;
    %y_pos_ext(extRows), acc_ext(extRows);
    %ders(range);

	j = 1;
    for i = indices1:indices2
    
      y_pos_ext(j) = y_pos(i);
      acc_ext(j) = filtNet(i);
      j = j + 1;
    end
    %%
    for i = 1:extRows-1
        
        ders(i) = (acc_ext(i + 1) - acc_ext(i)) / 0.04; %time intervals are 0.04 sec. This is taking the derivative for just the extension
    end
    
    